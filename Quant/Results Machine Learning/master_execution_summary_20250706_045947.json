{
  "timestamp": "2025-07-06T04:59:47.127379",
  "execution_time": 1.3243587017059326,
  "total_tests": 4,
  "successful_tests": 1,
  "failed_tests": 3,
  "parallel_execution": true,
  "timeout": 300,
  "results": {
    "data_structures": {
      "success": false,
      "message": "Failed with code 1",
      "execution_time": 0.606332540512085,
      "output": "\ud83e\uddea Iniciando tests de data_structures...\n\ud83d\udcca Creando datos de muestra...\n\u2705 Datos de muestra creados: 1000 filas\n\ud83e\uddea TestDataStructuresSimple - Configuraci\u00f3n inicial completada\n\u2705 test_basic_functionality passed - 1000 samples\n\u274c test_dollar_bars failed: Must have exactly 3 columns in csv: date_time, price, & volume. Got 5 columns: ['price', 'volume', 'dollar_volume', 'tick_direction', 'size']\n\u274c test_tick_bars failed: Must have exactly 3 columns in csv: date_time, price, & volume. Got 5 columns: ['price', 'volume', 'dollar_volume', 'tick_direction', 'size']\n\u274c test_time_bars failed: get_time_bars() got an unexpected keyword argument 'timestamp_col'\n\u274c test_volume_bars failed: Must have exactly 3 columns in csv: date_time, price, & volume. Got 5 columns: ['price', 'volume', 'dollar_volume', 'tick_direction', 'size']\n\n\ud83d\udcca Resultados finales guardados en: /workspaces/Sistema-de-datos/Quant/Results Machine Learning/results_data_structures/test_results.json\n\u2705 Tests pasados: 1/5\n\u23f1\ufe0f  Tiempo total: 0.00s\n",
      "error": "INFO:test_config_manager:Global configuration loaded from /workspaces/Sistema-de-datos/Quant/Test Machine Learning/test_global_config.yml\nINFO:test_config_manager:Configuration manager initialized for environment: development\ntest_basic_functionality (__main__.TestDataStructuresSimple.test_basic_functionality)\nTest b\u00e1sico de funcionalidad ... ok\ntest_dollar_bars (__main__.TestDataStructuresSimple.test_dollar_bars)\nTest para dollar bars ... INFO:base_bars:Initialized dollar_bars bars with batch_size=20000000\nINFO:base_bars:Starting batch_run for dollar_bars bars\nINFO:base_bars:Processing batch 1 with 1000 rows...\nERROR:base_bars:Data format validation failed: Must have exactly 3 columns in csv: date_time, price, & volume. Got 5 columns: ['price', 'volume', 'dollar_volume', 'tick_direction', 'size']\nERROR:base_bars:Critical error in batch processing: Must have exactly 3 columns in csv: date_time, price, & volume. Got 5 columns: ['price', 'volume', 'dollar_volume', 'tick_direction', 'size']\nERROR\ntest_tick_bars (__main__.TestDataStructuresSimple.test_tick_bars)\nTest para tick bars ... INFO:base_bars:Initialized tick_bars bars with batch_size=20000000\nINFO:base_bars:Starting batch_run for tick_bars bars\nINFO:base_bars:Processing batch 1 with 1000 rows...\nERROR:base_bars:Data format validation failed: Must have exactly 3 columns in csv: date_time, price, & volume. Got 5 columns: ['price', 'volume', 'dollar_volume', 'tick_direction', 'size']\nERROR:base_bars:Critical error in batch processing: Must have exactly 3 columns in csv: date_time, price, & volume. Got 5 columns: ['price', 'volume', 'dollar_volume', 'tick_direction', 'size']\nERROR\ntest_time_bars (__main__.TestDataStructuresSimple.test_time_bars)\nTest para time bars ... ERROR\ntest_volume_bars (__main__.TestDataStructuresSimple.test_volume_bars)\nTest para volume bars ... INFO:base_bars:Initialized volume_bars bars with batch_size=20000000\nINFO:base_bars:Starting batch_run for volume_bars bars\nINFO:base_bars:Processing batch 1 with 1000 rows...\nERROR:base_bars:Data format validation failed: Must have exactly 3 columns in csv: date_time, price, & volume. Got 5 columns: ['price', 'volume', 'dollar_volume', 'tick_direction', 'size']\nERROR:base_bars:Critical error in batch processing: Must have exactly 3 columns in csv: date_time, price, & volume. Got 5 columns: ['price', 'volume', 'dollar_volume', 'tick_direction', 'size']\nERROR\n\n======================================================================\nERROR: test_dollar_bars (__main__.TestDataStructuresSimple.test_dollar_bars)\nTest para dollar bars\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/workspaces/Sistema-de-datos/Quant/Test Machine Learning/test_data_structures/test_simple_data_structures.py\", line 232, in test_dollar_bars\n    dollar_bars = get_dollar_bars(\n                  ^^^^^^^^^^^^^^^^\n  File \"/workspaces/Sistema-de-datos/Quant/Machine Learning/data_structures/standard_data_structures.py\", line 249, in get_dollar_bars\n    return bars.batch_run(file_path_or_df, verbose=verbose, to_csv=to_csv, output_path=output_path)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/workspaces/Sistema-de-datos/Quant/Machine Learning/data_structures/base_bars.py\", line 185, in batch_run\n    self._assert_csv(batch)\n  File \"/workspaces/Sistema-de-datos/Quant/Machine Learning/data_structures/base_bars.py\", line 454, in _assert_csv\n    raise ValueError(f'Must have exactly 3 columns in csv: date_time, price, & volume. '\nValueError: Must have exactly 3 columns in csv: date_time, price, & volume. Got 5 columns: ['price', 'volume', 'dollar_volume', 'tick_direction', 'size']\n\n======================================================================\nERROR: test_tick_bars (__main__.TestDataStructuresSimple.test_tick_bars)\nTest para tick bars\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/workspaces/Sistema-de-datos/Quant/Test Machine Learning/test_data_structures/test_simple_data_structures.py\", line 152, in test_tick_bars\n    tick_bars = get_tick_bars(\n                ^^^^^^^^^^^^^^\n  File \"/workspaces/Sistema-de-datos/Quant/Machine Learning/data_structures/standard_data_structures.py\", line 207, in get_tick_bars\n    return bars.batch_run(file_path_or_df, verbose=verbose, to_csv=to_csv, output_path=output_path)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/workspaces/Sistema-de-datos/Quant/Machine Learning/data_structures/base_bars.py\", line 185, in batch_run\n    self._assert_csv(batch)\n  File \"/workspaces/Sistema-de-datos/Quant/Machine Learning/data_structures/base_bars.py\", line 454, in _assert_csv\n    raise ValueError(f'Must have exactly 3 columns in csv: date_time, price, & volume. '\nValueError: Must have exactly 3 columns in csv: date_time, price, & volume. Got 5 columns: ['price', 'volume', 'dollar_volume', 'tick_direction', 'size']\n\n======================================================================\nERROR: test_time_bars (__main__.TestDataStructuresSimple.test_time_bars)\nTest para time bars\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/workspaces/Sistema-de-datos/Quant/Test Machine Learning/test_data_structures/test_simple_data_structures.py\", line 114, in test_time_bars\n    time_bars = get_time_bars(\n                ^^^^^^^^^^^^^^\nTypeError: get_time_bars() got an unexpected keyword argument 'timestamp_col'\n\n======================================================================\nERROR: test_volume_bars (__main__.TestDataStructuresSimple.test_volume_bars)\nTest para volume bars\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/workspaces/Sistema-de-datos/Quant/Test Machine Learning/test_data_structures/test_simple_data_structures.py\", line 192, in test_volume_bars\n    volume_bars = get_volume_bars(\n                  ^^^^^^^^^^^^^^^^\n  File \"/workspaces/Sistema-de-datos/Quant/Machine Learning/data_structures/standard_data_structures.py\", line 228, in get_volume_bars\n    return bars.batch_run(file_path_or_df, verbose=verbose, to_csv=to_csv, output_path=output_path)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/workspaces/Sistema-de-datos/Quant/Machine Learning/data_structures/base_bars.py\", line 185, in batch_run\n    self._assert_csv(batch)\n  File \"/workspaces/Sistema-de-datos/Quant/Machine Learning/data_structures/base_bars.py\", line 454, in _assert_csv\n    raise ValueError(f'Must have exactly 3 columns in csv: date_time, price, & volume. '\nValueError: Must have exactly 3 columns in csv: date_time, price, & volume. Got 5 columns: ['price', 'volume', 'dollar_volume', 'tick_direction', 'size']\n\n----------------------------------------------------------------------\nRan 5 tests in 0.038s\n\nFAILED (errors=4)\n",
      "return_code": 1
    },
    "multi_product": {
      "success": false,
      "message": "Failed with code 1",
      "execution_time": 0.6889517307281494,
      "output": "",
      "error": "INFO:test_config_manager:Global configuration loaded from /workspaces/Sistema-de-datos/Quant/Test Machine Learning/test_global_config.yml\nINFO:test_config_manager:Configuration manager initialized for environment: development\nINFO:__main__:Loaded 10 datasets for multi_product testing\ntest_edge_cases_and_robustness (__main__.TestCompleteMultiProduct.test_edge_cases_and_robustness)\nTest de casos edge y robustez ... INFO:__main__:Testing edge cases and robustness\nFAIL\ntest_etf_trick_equal_weight_portfolio (__main__.TestCompleteMultiProduct.test_etf_trick_equal_weight_portfolio)\nTest ETF Trick con portfolio de pesos iguales ... INFO:__main__:Testing ETF Trick with equal weight portfolio\nERROR:__main__:ETF Trick test failed for portfolio 1: ETFTrick.__init__() missing 4 required positional arguments: 'open_df', 'close_df', 'alloc_df', and 'costs_df'\nERROR:__main__:ETF Trick test failed for portfolio 2: ETFTrick.__init__() missing 4 required positional arguments: 'open_df', 'close_df', 'alloc_df', and 'costs_df'\nERROR:__main__:ETF Trick test failed for portfolio 3: ETFTrick.__init__() missing 4 required positional arguments: 'open_df', 'close_df', 'alloc_df', and 'costs_df'\nok\ntest_etf_trick_momentum_portfolio (__main__.TestCompleteMultiProduct.test_etf_trick_momentum_portfolio)\nTest ETF Trick con portfolio basado en momentum ... INFO:__main__:Testing ETF Trick with momentum portfolio\nERROR:__main__:ETF Trick momentum portfolio test failed: No axis named 1 for object type Series\nok\ntest_etf_trick_rebalancing_costs (__main__.TestCompleteMultiProduct.test_etf_trick_rebalancing_costs)\nTest ETF Trick con costos de rebalancing ... INFO:__main__:Testing ETF Trick with rebalancing costs\nWARNING:__main__:Rebalancing cost test failed for cost level 0.0: ETFTrick.__init__() missing 4 required positional arguments: 'open_df', 'close_df', 'alloc_df', and 'costs_df'\nWARNING:__main__:Rebalancing cost test failed for cost level 0.001: ETFTrick.__init__() missing 4 required positional arguments: 'open_df', 'close_df', 'alloc_df', and 'costs_df'\nWARNING:__main__:Rebalancing cost test failed for cost level 0.005: ETFTrick.__init__() missing 4 required positional arguments: 'open_df', 'close_df', 'alloc_df', and 'costs_df'\nWARNING:__main__:Rebalancing cost test failed for cost level 0.01: ETFTrick.__init__() missing 4 required positional arguments: 'open_df', 'close_df', 'alloc_df', and 'costs_df'\nINFO:__main__:ETF Trick rebalancing costs test completed\nok\ntest_futures_roll_functionality (__main__.TestCompleteMultiProduct.test_futures_roll_functionality)\nTest funcionalidad de Futures Roll ... INFO:__main__:Testing Futures Roll functionality\nWARNING:__main__:Futures roll test failed for GLD_daily: FuturesRoll.create_continuous_series() got an unexpected keyword argument 'contracts'\nWARNING:__main__:Futures roll test failed for SLV_daily: FuturesRoll.create_continuous_series() got an unexpected keyword argument 'contracts'\nWARNING:__main__:Futures roll test failed for USO_daily: FuturesRoll.create_continuous_series() got an unexpected keyword argument 'contracts'\nINFO:__main__:Futures Roll functionality test completed\nok\ntest_performance_benchmarks (__main__.TestCompleteMultiProduct.test_performance_benchmarks)\nTest de performance con benchmarks ... INFO:__main__:Testing performance benchmarks\nERROR:__main__:Performance benchmark failed for portfolio size 2: ETFTrick.__init__() missing 4 required positional arguments: 'open_df', 'close_df', 'alloc_df', and 'costs_df'\nERROR:__main__:Performance benchmark failed for portfolio size 3: ETFTrick.__init__() missing 4 required positional arguments: 'open_df', 'close_df', 'alloc_df', and 'costs_df'\nERROR:__main__:Performance benchmark failed for portfolio size 5: ETFTrick.__init__() missing 4 required positional arguments: 'open_df', 'close_df', 'alloc_df', and 'costs_df'\nok\n\n======================================================================\nFAIL: test_edge_cases_and_robustness (__main__.TestCompleteMultiProduct.test_edge_cases_and_robustness)\nTest de casos edge y robustez\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/workspaces/Sistema-de-datos/Quant/Test Machine Learning/test_multi_product/test_complete_multi_product.py\", line 749, in test_edge_cases_and_robustness\n    self.assertGreater(passed_tests, 0, \"No edge case tests passed\")\nAssertionError: 0 not greater than 0 : No edge case tests passed\n\n----------------------------------------------------------------------\nRan 6 tests in 0.164s\n\nFAILED (failures=1)\n",
      "return_code": 1
    },
    "labeling": {
      "success": false,
      "message": "Failed with code 1",
      "execution_time": 1.0516993999481201,
      "output": "",
      "error": "Traceback (most recent call last):\n  File \"/workspaces/Sistema-de-datos/Quant/Test Machine Learning/test_labeling/test_complete_labeling.py\", line 22, in <module>\n    from labeling.labeling import get_events, get_bins, get_3_barriers, apply_pt_sl_on_t1, drop_labels\nImportError: cannot import name 'get_3_barriers' from 'labeling.labeling' (/workspaces/Sistema-de-datos/Quant/Machine Learning/labeling/labeling.py)\n",
      "return_code": 1
    },
    "util": {
      "success": true,
      "message": "Completed in 1.32s",
      "execution_time": 1.3233578205108643,
      "output": "\ud83e\uddea Iniciando tests de util...\n\ud83d\udcca Creando datos de muestra...\n\u2705 Datos de muestra creados: 1000 filas\n\ud83e\uddea TestUtilSimple - Configuraci\u00f3n inicial completada\n\u2705 test_basic_functionality passed - 1000 samples\n\u2705 test_data_processing passed\n\u2705 test_math_operations passed\n\n\ud83d\udcca Resultados finales guardados en: /workspaces/Sistema-de-datos/Quant/Results Machine Learning/results_util/test_results.json\n\u2705 Tests pasados: 3/3\n\u23f1\ufe0f  Tiempo total: 0.00s\n",
      "error": "INFO:test_config_manager:Global configuration loaded from /workspaces/Sistema-de-datos/Quant/Test Machine Learning/test_global_config.yml\nINFO:test_config_manager:Configuration manager initialized for environment: development\ntest_basic_functionality (__main__.TestUtilSimple.test_basic_functionality)\nTest b\u00e1sico de funcionalidad ... ok\ntest_data_processing (__main__.TestUtilSimple.test_data_processing)\nTest b\u00e1sico de procesamiento de datos ... ok\ntest_math_operations (__main__.TestUtilSimple.test_math_operations)\nTest b\u00e1sico de operaciones matem\u00e1ticas ... ok\n\n----------------------------------------------------------------------\nRan 3 tests in 0.012s\n\nOK\n",
      "return_code": 0
    }
  }
}