# Docker Compose para Sistema de Datos con Patrones
version: '3.8'

services:
  # Servicio principal de an√°lisis de patrones
  pattern-analyzer:
    build: .
    container_name: sistema-datos-patterns
    ports:
      - "8888:8888"  # JupyterLab
      - "8050:8050"  # Dash apps
    volumes:
      - ./Quant:/app/Quant
      - ./sql:/app/sql
      - ./monitoring:/app/monitoring
      - ./data:/app/data
      - ./results:/app/results
      - ./models:/app/models
      - ./logs:/app/logs
    environment:
      - JUPYTER_TOKEN=sistema-datos-2025
      - PYTHONPATH=/app
    networks:
      - datos-network

  # Base de datos para almacenar patrones encontrados
  postgres-patterns:
    image: postgres:15
    container_name: patterns-db
    environment:
      POSTGRES_DB: patterns_db
      POSTGRES_USER: patterns_user
      POSTGRES_PASSWORD: patterns_secure_2025
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sql:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - datos-network

  # Redis para cache de datos y resultados
  redis-cache:
    image: redis:7-alpine
    container_name: patterns-cache
    ports:
      - "6379:6379"
    networks:
      - datos-network

  # Servicio de monitoreo (opcional)
  prometheus:
    image: prom/prometheus:latest
    container_name: patterns-monitoring
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - datos-network

volumes:
  postgres_data:

networks:
  datos-network:
    driver: bridge
